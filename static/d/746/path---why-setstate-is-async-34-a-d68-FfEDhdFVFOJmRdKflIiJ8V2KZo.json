{"data":{"markdownRemark":{"html":"<p>Let's start with what happens if setState is synchronous?</p>\n<ol>\n<li>Performance issues</li>\n</ol>\n<p>Suppose there are multiple parent and child components, and the child component is updated through a partial state value of the parent component, and multiple redundant updates occur.</p>\n<p>The simplest case:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Child</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> childCount<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> childCount<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Count<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>childCount <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>parentCount <span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> parentCount<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> parentCount<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Child parentCount<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>parentCount <span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If setState is synchronous, the child component is updated three times. If it is asynchronous, the child component will be updated only twice.</p>\n<ol start=\"2\">\n<li>Unable to implement asynchronous rendering  </li>\n</ol>\n<p>If setState is synchronous, asynchronous rendering is no longer possible. React will then be rendered asynchronously, improving performance and user experience in some asynchronous scenarios.</p>","headings":[],"fields":{"slug":"/get-started/other-modules/why-setstate-is-async/en/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/get-started/other-modules/why-setstate-is-async/en/","rootPath":"/","locale":"en","decoratedLocale":"en","texts":{"siteTitle":"How React Works","getStarted":"Get Started","home":{"introduction":"Get to Know How React Works Under the Hood"}},"pathname":"/why-setstate-is-async","categories":[{"label":"Flow","href":"/whole-flow"},{"label":"Fiber","href":"/fiber"},{"label":"The module","foldable":true,"folded":false,"items":[{"label":"JSX","href":"/jsx"},{"label":"Why setState is asynchronous","href":"/why-setstate-is-async"},{"label":"How React event system works","href":"/how-react-event-system-works"}]}]}}
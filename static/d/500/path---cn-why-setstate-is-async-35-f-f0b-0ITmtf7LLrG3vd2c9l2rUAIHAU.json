{"data":{"markdownRemark":{"html":"<p>先说如果setState是同步的，我们会遇到什么问题？</p>\n<ol>\n<li>性能问题</li>\n</ol>\n<p>假设这里有多个父组件和子组件，子组件通过父组件的部分状态值进行更新，会有多次多余的更新出现。<br>\n一个最简单的案例：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Child</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> childCount<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> childCount<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Count<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>childCount <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>parentCount <span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Parent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> parentCount<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> parentCount<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Child parentCount<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>parentCount <span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如果setState是同步的，子组件会更新3次。而如果是异步，子组件只会更新2次。</p>\n<ol start=\"2\">\n<li>无法实现异步渲染  </li>\n</ol>\n<p>如果setState是同步的，异步渲染将不再可能。而React以后会通过异步渲染，在一些异步情形中有效提升性能和用户体验。</p>","headings":[],"fields":{"slug":"/get-started/other-modules/why-setstate-is-async/cn/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/get-started/other-modules/why-setstate-is-async/cn/","rootPath":"/cn/","locale":"zh_CN","decoratedLocale":"cn","texts":{"siteTitle":"React工作原理","getStarted":"开始使用","metaDesc":"React原理 React工作原理 如何实现React React源码","home":{"introduction":"了解React在底层如何运转"}},"pathname":"/cn/why-setstate-is-async","categories":[{"label":"整体流程","href":"/cn/whole-flow"},{"label":"Fiber","href":"/cn/fiber"},{"label":"模块","foldable":true,"folded":false,"items":[{"label":"JSX","href":"/cn/jsx"},{"label":"为什么setState是异步的","href":"/cn/why-setstate-is-async"},{"label":"React事件系统是如何运作的","href":"/cn/how-react-event-system-works"}]}]}}